name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: seanmiddleditch/gha-setup-vsdevenv@master

    - name: Install Dependencies
      run: vcpkg install fmt:x64-windows
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_COMPILER=cl.exe

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Day1
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 1 - Solution 1"
        day1/day1_solution1.exe
        echo "Day 1 - Solution 2"
        day1/day1_solution2.exe
      
    - name: Day2
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 2 - Solution 1"
        day2/day2_solution1.exe
        echo "Day 2 - Solution 2"
        day2/day2_solution2.exe
      
    - name: Day3
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 3 - Solution 1"
        day3/day3_solution1.exe 
        echo "Day 3 - Solution 2"
        day3/day3_solution2.exe
      
    - name: Day4
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 4 - Solution 1"
        day4/day4_solution1.exe 
        echo "Day 4 - Solution 2"
        day4/day4_solution2.exe
      
    - name: Day5
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 5 - Solution 1"
        day5/day5_solution1.exe
        echo "Day 5 - Solution 2"
        day5/day5_solution2.exe
      
    - name: Day6
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 6 - Solution 1"
        day6/day6_solution1.exe
        echo "Day 6 - Solution 2"
        day6/day6_solution2.exe
      
    - name: Day7
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 7 - Solution 1"
        day7/day7_solution1.exe
        echo "Day 7 - Solution 2"
        day7/day7_solution2.exe
      
    - name: Day8
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 8 - Solution 1"
        day/day8_solution1.exe
        echo "Day 8 - Solution 2"
        day/day8_solution2.exe
      
    - name: Day9
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 9 - Solution 1"
        day9/day9_solution1.exe
        echo "Day 9 - Solution 2"
        day9/day9_solution2.exe
      
    - name: Day10
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 10 - Solution 1"
        day10/day10_solution1.exe
        echo "Day 10 - Solution 2"
        day10/day10_solution2.exe
      
    - name: Day11
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Day 11 - Solution 1"
        day11/day11_solution1.exe
        echo "Day 11 - Solution 2"
        day11/day11_solution2.exe
